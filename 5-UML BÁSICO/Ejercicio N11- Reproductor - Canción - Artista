// Asociación unidireccional: Canción → Artista
// Dependencia de uso: Reproductor.reproducir(Cancion)

class Artista {
    private String nombre;
    private String genero;

    public Artista(String nombre, String genero) {
        this.nombre = nombre;
        this.genero = genero;
    }

    public String getNombre() {
        return nombre;
    }

    public String getGenero() {
        return genero;
    }
}

class Cancion {
    private String titulo;
    private Artista artista; // Asociación unidireccional

    public Cancion(String titulo) {
        this.titulo = titulo;
    }

    public void setArtista(Artista artista) {
        this.artista = artista;
    }

    public String getTitulo() {
        return titulo;
    }

    public Artista getArtista() {
        return artista;
    }
}

class Reproductor {
    // Dependencia de uso: utiliza Cancion como parámetro sin guardarla
    public void reproducir(Cancion cancion) {
        System.out.println("♪ Reproduciendo: " + cancion.getTitulo());
        if (cancion.getArtista() != null) {
            System.out.println("  Artista: " + cancion.getArtista().getNombre());
            System.out.println("  Género: " + cancion.getArtista().getGenero());
        }
        System.out.println("  Estado: ► Playing...\n");
    }
}

public class Main {
    public static void main(String[] args) {
        System.out.println("=== EJERCICIO 11: REPRODUCTOR - CANCIÓN - ARTISTA ===");
        System.out.println("(Dependencia de Uso)\n");
        
        Artista artista = new Artista("Gustavo Cerati", "Rock");
        Cancion cancion = new Cancion("Crimen");
        cancion.setArtista(artista);
        
        Reproductor reproductor = new Reproductor();
        
        // El reproductor usa temporalmente la canción
        reproductor.reproducir(cancion);
        
        // Otra canción
        Cancion cancion2 = new Cancion("Puente");
        cancion2.setArtista(artista);
        reproductor.reproducir(cancion2);
    }
}